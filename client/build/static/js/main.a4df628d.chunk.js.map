{"version":3,"sources":["store/productListSlice.js","store/productSlice.js","store/cartSlice.js","store/userSlice.js","store/orderSlice.js","store/index.js","components/Header.js","components/Footer.js","store/productListThunk.js","components/LoadingSpinner.js","components/Message.js","components/Rating.js","components/Product.js","pages/Homepage.js","store/productThunk.js","components/SelectQuantity.js","pages/Productpage.js","store/cartThunk.js","pages/Cartpage.js","store/userLoginThunk.js","components/FormContainer.js","pages/Loginpage.js","store/userRegisterThunk.js","pages/Registerpage.js","store/userProfileThunk.js","store/getOrderThunk.js","pages/Profilepage.js","components/CheckoutSteps.js","pages/Shippingpage.js","pages/Paymentpage.js","store/placeOrderThunk.js","pages/Orderpage.js","pages/Confirmationpage.js","App.js","index.js"],"names":["productListSlice","createSlice","name","initialState","loading","products","error","reducers","requestProductList","state","action","setProductList","payload","failProductList","productSlice","product","rating","numReviews","requestProduct","setProduct","failProduct","storedCart","localStorage","getItem","storedShipping","cart","JSON","parse","shipping","payment","cartSlice","fetchItem","addToCart","cartItem","find","item","id","newArray","map","push","failFetch","removeFromCart","itemId","filter","setItem","stringify","addShipping","addPayment","clearCart","clear","storedUser","user","success","userSlice","requestUser","setUser","failUser","logout","resetSuccess","orderSlice","order","_id","orders","requestOrder","setOrder","setOrders","failOrder","resetOrders","resetOrder","store","configureStore","reducer","productList","productListActions","actions","productActions","cartActions","userActions","orderActions","Header","useSelector","dispatch","useDispatch","navigate","useNavigate","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","Toggle","Collapse","Nav","className","Link","NavDropdown","title","Item","onClick","Footer","Row","Col","productListThunk","a","axios","get","data","errorMessage","response","message","LoadingSpinner","Spinner","animation","role","style","width","height","margin","display","Message","children","Alert","defaultProps","Rating","value","text","color","Product","Card","Img","src","image","Body","textDecoration","Title","as","Text","price","Homepage","useEffect","sm","md","lg","xl","productThunk","SelectQuantity","productQuantity","productQuantityHandler","Form","Control","onChange","lineHeight","textAlign","Array","countInStock","keys","num","Productpage","useParams","useState","setProductQuantity","inStock","Button","Image","alt","fluid","ListGroup","gridGap","ListGroupItem","description","xs","e","target","disabled","cartThunk","quantity","getState","cartStore","Cartpage","searchParams","useSearchParams","removeFromCartHandler","justifyContent","length","float","rounded","alignItems","bind","reduce","acc","parseInt","parseFloat","toLocaleString","userLoginThunk","email","password","config","headers","post","FormContainer","LoginPage","setEmail","setPassword","onSubmit","preventDefault","Group","controlId","Label","type","placeholder","userRegisterThunk","RegisterPage","setName","repeatPassword","setRepeatPassword","setMessage","userProfileThunk","userToken","token","Authorization","put","getOrderThunk","Profilepage","userLoading","userError","ordersLoading","ordersError","Table","striped","bordered","responsive","createdAt","substring","totalPrice","paymentResult","status","paidAt","isDelivered","checkoutSteps","step1Disable","step1","step2Disable","step2","step3Disable","step3","step4Disable","step4","Shippingpage","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","CheckoutSteps","shippingObject","required","Paymentpage","setPayment","Check","label","placeOrderThunk","Orderpage","paypalResponse","setPaypalResponse","orderId","itemsPrice","next","Number","shippingPrice","taxPrice","undefined","maximumFractionDigits","minimumFractionDigits","createOrder","create","purchase_units","amount","then","onApprove","capture","marginLeft","Confirmationpage","summary","App","paypalClientId","setPaypalClientId","fetchPayPalClientId","options","path","element","Loginpage","Registerpage","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a4df628d.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = { loading: false, products: [], error: \"\" };\n\nconst productListSlice = createSlice({\n  name: \"setProductList\",\n  initialState: initialState,\n  reducers: {\n    requestProductList(state, action) {\n      return { loading: true, products: [], error: \"\" };\n    },\n    setProductList(state, action) {\n      return { loading: false, products: action.payload, error: \"\" };\n    },\n    failProductList(state, action) {\n      return { loading: false, products: [], error: action.payload };\n    },\n  },\n});\n\nexport default productListSlice;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  loading: false,\n  product: { rating: 0, numReviews: 0 },\n  error: \"\",\n};\n\nconst productSlice = createSlice({\n  name: \"setProduct\",\n  initialState: initialState,\n  reducers: {\n    requestProduct(state, action) {\n      state.loading = true;\n    },\n    setProduct(state, action) {\n      return { loading: false, product: action.payload };\n    },\n    failProduct(state, action) {\n      state.error = action.payload;\n    },\n  },\n});\n\nexport default productSlice;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst storedCart = localStorage.getItem(\"cart\");\nconst storedShipping = localStorage.getItem(\"shipping\");\n\nlet initialCart = storedCart ? JSON.parse(storedCart) : [];\nlet initialShipping = storedShipping ? JSON.parse(storedShipping) : {};\n\nconst initialState = {\n  cart: initialCart,\n  loading: false,\n  error: \"\",\n  shipping: initialShipping,\n  payment: \"\",\n};\n\nconst cartSlice = createSlice({\n  name: \"setCart\",\n  initialState: initialState,\n  reducers: {\n    fetchItem(state, action) {\n      state.loading = true;\n    },\n    addToCart(state, action) {\n      state.loading = false;\n      let cartItem = action.payload;\n      let findItem = state.cart.find((item) => item.id === cartItem.id);\n      if (findItem) {\n        let newArray = state.cart.map((item) =>\n          item.id === cartItem.id ? cartItem : item\n        );\n        state.cart = newArray;\n      } else {\n        state.cart.push(cartItem);\n      }\n    },\n    failFetch(state, action) {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    removeFromCart(state, action) {\n      let itemId = action.payload;\n      let findItem = state.cart.find((item) => item.id === itemId);\n      if (findItem) {\n        let newArray = state.cart.filter((item) => item.id !== itemId);\n        state.cart = newArray;\n        localStorage.setItem(\"cart\", JSON.stringify(newArray));\n      }\n    },\n    addShipping(state, action) {\n      state.shipping = action.payload;\n      localStorage.setItem(\"shipping\", JSON.stringify(action.payload));\n    },\n    addPayment(state, action) {\n      state.payment = action.payload;\n    },\n    clearCart(state, action) {\n      state.cart = [];\n      localStorage.clear(\"cart\");\n    },\n  },\n});\n\nexport default cartSlice;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst storedUser = localStorage.getItem(\"user\");\n\nlet initialUser = storedUser ? JSON.parse(storedUser) : null;\n\nconst initialState = {\n  loading: false,\n  user: initialUser,\n  success: false,\n  error: \"\",\n};\n\nconst userSlice = createSlice({\n  name: \"setUserLogin\",\n  initialState: initialState,\n  reducers: {\n    requestUser(state, action) {\n      state.loading = true;\n      state.success = false;\n    },\n    setUser(state, action) {\n      return { loading: false, user: action.payload, success: true };\n    },\n    failUser(state, action) {\n      state.error = action.payload;\n      state.loading = false;\n      state.success = false;\n    },\n    logout(state, action) {\n      localStorage.clear(\"user\");\n      return { loading: false, error: null, user: null };\n    },\n    resetSuccess(state, action) {\n      state.success = false;\n    },\n  },\n});\n\nexport default userSlice;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst orderSlice = createSlice({\n  name: \"setOrder\",\n  initialState: {\n    loading: false,\n    order: { _id: null },\n    orders: [],\n    success: false,\n    error: \"\",\n  },\n  reducers: {\n    requestOrder(state, action) {\n      state.loading = true;\n    },\n    setOrder(state, action) {\n      state.loading = false;\n      state.order = action.payload;\n      state.success = true;\n    },\n    setOrders(state, action) {\n      state.loading = false;\n      state.orders = action.payload;\n      state.success = true;\n    },\n    failOrder(state, action) {\n      state.error = action.payload;\n      state.loading = false;\n      state.success = false;\n    },\n    resetOrders(state, action) {\n      state = {\n        loading: false,\n        order: { _id: null },\n        orders: [],\n        success: false,\n        error: \"\",\n      };\n    },\n    resetSuccess(state, action) {\n      state.success = false;\n    },\n    resetOrder(state, action) {\n      state.order = { _id: null };\n    },\n  },\n});\n\nexport default orderSlice;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport productListSlice from \"./productListSlice\";\nimport productSlice from \"./productSlice\";\nimport cartSlice from \"./cartSlice\";\nimport userSlice from \"./userSlice\";\nimport orderSlice from \"./orderSlice\";\n\nconst store = configureStore({\n  reducer: {\n    productList: productListSlice.reducer,\n    product: productSlice.reducer,\n    cart: cartSlice.reducer,\n    user: userSlice.reducer,\n    orders: orderSlice.reducer,\n  },\n});\n\nexport const productListActions = productListSlice.actions;\nexport const productActions = productSlice.actions;\nexport const cartActions = cartSlice.actions;\nexport const userActions = userSlice.actions;\nexport const orderActions = orderSlice.actions;\nexport default store;\n","import { Navbar, Nav, Container, NavDropdown } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { userActions, orderActions } from \"../store\";\n\nconst Header = () => {\n  const { user } = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const logoutHandler = () => {\n    dispatch(orderActions.resetOrders());\n    dispatch(userActions.logout());\n    navigate(\"/\");\n  };\n\n  return (\n    <header>\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"sm\" collapseOnSelect>\n        <Container>\n          <LinkContainer to=\"/\">\n            <Navbar.Brand>Proshop</Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"ms-auto\">\n              <LinkContainer to=\"/cart\">\n                <Nav.Link>\n                  <i className=\"fas fa-shopping-cart\"></i> Cart\n                </Nav.Link>\n              </LinkContainer>\n              {user ? (\n                <NavDropdown title={user.name} id=\"basic-nav-dropdown\">\n                  <LinkContainer to=\"/profile\">\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                  </LinkContainer>\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                <LinkContainer to=\"/login\">\n                  <Nav.Link>\n                    <i className=\"fas fa-user\"></i> Sign In\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default Header;\n","import { Container, Row, Col } from \"react-bootstrap\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row>\n          <Col className=\"text-center py-3\">Copyright &copy;</Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import axios from \"axios\";\nimport { productListActions } from \"./\";\n\nconst productListThunk = () => {\n  return async (dispatch) => {\n    try {\n      dispatch(productListActions.requestProductList());\n      // fetching from backend http request is made possible with proxy in package.json\n      const { data } = await axios.get(\"/api/products\");\n      dispatch(productListActions.setProductList(data));\n    } catch (error) {\n      let errorMessage =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch(productListActions.failProductList(errorMessage));\n    }\n  };\n};\n\nexport default productListThunk;\n","import { Spinner } from \"react-bootstrap\";\n\nconst LoadingSpinner = () => {\n  return (\n    <Spinner\n      animation=\"border\"\n      role=\"status\"\n      style={{\n        width: \"100px\",\n        height: \"100px\",\n        margin: \"auto\",\n        display: \"block\",\n      }}\n    ></Spinner>\n  );\n};\n\nexport default LoadingSpinner;\n","import { Alert } from \"react-bootstrap\";\n\nconst Message = ({ variant, children }) => {\n  return <Alert variant={variant}>{children}</Alert>;\n};\n\nMessage.defaultProps = {\n  variant: \"info\",\n};\n\nexport default Message;\n","import PropTypes from \"prop-types\";\n\nconst Rating = ({ value, text, color }) => {\n  return (\n    <div className=\"rating\">\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 1\n              ? \"fas fa-star\"\n              : value >= 0.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 2\n              ? \"fas fa-star\"\n              : value >= 1.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 3\n              ? \"fas fa-star\"\n              : value >= 2.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 4\n              ? \"fas fa-star\"\n              : value >= 3.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 5\n              ? \"fas fa-star\"\n              : value >= 4.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n      <span className=\"ms-2\">{text && text}</span>\n    </div>\n  );\n};\n\nRating.defaultProps = {\n  color: \"#f8e825\",\n};\n\nRating.propTypes = {\n  value: PropTypes.number.isRequired,\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string,\n};\n\nexport default Rating;\n","import { Link } from \"react-router-dom\";\nimport { Card } from \"react-bootstrap\";\nimport Rating from \"./Rating\";\n\nconst Product = ({ product }) => {\n  return (\n    <Card className=\"my-3 p-3 rounded\">\n      <Link to={`/product/${product._id}`}>\n        <Card.Img src={product.image} variant=\"top\" />\n      </Link>\n      <Card.Body>\n        <Link to={`/product/${product._id}`} style={{ textDecoration: \"none\" }}>\n          <Card.Title as=\"div\">\n            <strong>{product.name}</strong>\n          </Card.Title>\n        </Link>\n        <Card.Text as=\"div\">\n          <div className=\"my-3\">\n            <Rating\n              value={product.rating}\n              text={`${product.numReviews} reviews`}\n            />\n          </div>\n        </Card.Text>\n        <Card.Text as=\"h4\">${product.price}</Card.Text>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Product;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport productListThunk from \"../store/productListThunk\";\nimport { useEffect } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport ErrorMessage from \"../components/Message\";\nimport Product from \"../components/Product\";\n\nconst Homepage = () => {\n  const dispatch = useDispatch();\n  // effects\n  useEffect(() => {\n    dispatch(productListThunk());\n  }, [dispatch]);\n\n  // getting context\n  let { products, loading, error } = useSelector((state) => state.productList);\n\n  return (\n    <>\n      <h1>Latest Products</h1>\n      {loading ? (\n        <LoadingSpinner />\n      ) : error ? (\n        <ErrorMessage variant={\"danger\"}>{error}</ErrorMessage>\n      ) : (\n        <Row>\n          {products.map((product) => (\n            <Col sm={12} md={6} lg={4} xl={3} key={product._id}>\n              <Product product={product} />\n            </Col>\n          ))}\n        </Row>\n      )}\n    </>\n  );\n};\n\nexport default Homepage;\n","import axios from \"axios\";\nimport { productActions } from \".\";\n\nconst productThunk = (id) => {\n  return async (dispatch) => {\n    try {\n      dispatch(productActions.requestProduct());\n      // fetching from backend http request is made possible with proxy in package.json\n      const { data } = await axios.get(`/api/products/${id}`);\n      dispatch(productActions.setProduct(data));\n    } catch (error) {\n      let errorMessage =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch(productActions.failProduct(errorMessage));\n    }\n  };\n};\n\nexport default productThunk;\n","import { Form } from \"react-bootstrap\";\n\nconst SelectQuantity = ({\n  product,\n  productQuantity,\n  productQuantityHandler,\n}) => {\n  return (\n    <Form.Control\n      as=\"select\"\n      value={productQuantity}\n      onChange={productQuantityHandler}\n      className=\"py-1\"\n      style={{\n        height: \"1.6rem\",\n        lineHeight: \"1.2rem\",\n        textAlign: \"center\",\n      }}\n    >\n      {[...Array(product.countInStock).keys()].map((num) => (\n        <option key={num + 1} value={num + 1}>\n          {num + 1}\n        </option>\n      ))}\n    </Form.Control>\n  );\n};\n\nexport default SelectQuantity;\n","import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport productThunk from \"../store/productThunk\";\nimport {\n  Row,\n  Col,\n  Image,\n  ListGroup,\n  Button,\n  Card,\n  ListGroupItem,\n} from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport Rating from \"../components/Rating\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport ErrorMessage from \"../components/Message\";\nimport SelectQuantity from \"../components/SelectQuantity\";\n\nconst Productpage = () => {\n  // getting params and initializing hooks\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const [productQuantity, setProductQuantity] = useState(1);\n\n  // effects\n  useEffect(() => {\n    dispatch(productThunk(id));\n  }, [dispatch, id]);\n\n  // context\n  const { product, loading, error } = useSelector((state) => state.product);\n\n  // jsx input\n  const inStock = product && product.countInStock > 0;\n\n  // jsx handlers\n  const productQuantityHandler = (e) => {\n    setProductQuantity(e.target.value);\n  };\n\n  return (\n    <>\n      {loading ? (\n        <LoadingSpinner />\n      ) : error ? (\n        <ErrorMessage variant={\"danger\"} />\n      ) : (\n        <Row className=\"justify-content-center\">\n          <Col>\n            <LinkContainer to=\"/\">\n              <Button variant=\"light\">Go Back</Button>\n            </LinkContainer>\n          </Col>\n          <Row className=\"my-3\">\n            <Col md={6}>\n              <Image src={product.image} alt={product.name} fluid />\n            </Col>\n            <Col className=\"mt-sm-3 mt-md-0\" md={6}>\n              <ListGroup variant=\"flush\" style={{ gridGap: \"10px\" }}>\n                <ListGroupItem>\n                  <h4>{product.name}</h4>\n                </ListGroupItem>\n                <ListGroupItem>\n                  <Rating\n                    value={product.rating}\n                    text={`${product.numReviews} reviews`}\n                  />\n                </ListGroupItem>\n                <ListGroupItem>Price: ${product.price}</ListGroupItem>\n                <ListGroupItem>{product.description}</ListGroupItem>\n              </ListGroup>\n              <Row className=\"justify-content-start ms-1 mt-3\">\n                <Col xs={\"auto\"}>\n                  <Card>\n                    <ListGroup variant=\"flush\">\n                      <ListGroupItem>\n                        <Row>\n                          <Col>Price:</Col>\n                          <Col className=\"text-end\">\n                            <strong>${product.price}</strong>\n                          </Col>\n                        </Row>\n                      </ListGroupItem>\n                      <ListGroupItem>\n                        <Row>\n                          <Col>Status:</Col>\n                          <Col className=\"text-end\" xs=\"auto\">\n                            {inStock ? \"In Stock\" : \"Out of Stock\"}\n                          </Col>\n                        </Row>\n                      </ListGroupItem>\n                      <ListGroupItem>\n                        {inStock && (\n                          <Row>\n                            <Col>Quantity:</Col>\n                            <Col>\n                              <SelectQuantity\n                                product={product}\n                                productQuantity={productQuantity}\n                                productQuantityHandler={productQuantityHandler}\n                              />\n                            </Col>\n                          </Row>\n                        )}\n                      </ListGroupItem>\n                      <ListGroupItem>\n                        <Row className=\"justify-content-center\">\n                          <LinkContainer\n                            to={`/cart/${id}?quantity=${productQuantity}`}\n                            className=\"mx-3 my-2\"\n                            style={{ width: \"10rem\" }}\n                          >\n                            <Button disabled={!inStock} variant=\"dark\">\n                              Add to Cart\n                            </Button>\n                          </LinkContainer>\n                        </Row>\n                      </ListGroupItem>\n                    </ListGroup>\n                  </Card>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Row>\n      )}\n    </>\n  );\n};\n\nexport default Productpage;\n","import axios from \"axios\";\nimport { cartActions } from \".\";\n\nconst cartThunk = (id, quantity) => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch(cartActions.fetchItem());\n      // fetching from backend http request is made possible with proxy in package.json\n      const { data } = await axios.get(`/api/products/${id}`);\n      let cartItem = {\n        id,\n        quantity,\n        name: data.name,\n        image: data.image,\n        price: data.price,\n        countInStock: data.countInStock,\n      };\n      dispatch(cartActions.addToCart(cartItem));\n    } catch (error) {\n      let errorMessage =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch(cartActions.failFetch(errorMessage));\n    }\n    let cartStore = getState().cart.cart;\n    localStorage.setItem(\"cart\", JSON.stringify(cartStore));\n  };\n};\n\nexport default cartThunk;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  useParams,\n  useSearchParams,\n  Link,\n  useNavigate,\n} from \"react-router-dom\";\nimport {\n  Row,\n  Col,\n  ListGroup,\n  ListGroupItem,\n  Image,\n  Button,\n  Card,\n} from \"react-bootstrap\";\nimport { cartActions } from \"../store\";\nimport Message from \"../components/Message\";\nimport SelectQuantity from \"../components/SelectQuantity\";\nimport cartThunk from \"../store/cartThunk\";\n\nconst Cartpage = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const searchParams = useSearchParams()[0];\n  const { id } = useParams();\n  let quantity = searchParams.get(\"quantity\");\n  const cart = useSelector((state) => state.cart.cart);\n  const user = useSelector((state) => state.user.user);\n\n  useEffect(() => {\n    if (id) {\n      dispatch(cartThunk(id, quantity));\n    }\n  }, [dispatch, id, quantity]);\n\n  const productQuantityHandler = (item, e) => {\n    dispatch(cartActions.addToCart({ ...item, quantity: e.target.value }));\n  };\n\n  const removeFromCartHandler = (id) => {\n    dispatch(cartActions.removeFromCart(id));\n  };\n\n  const checkoutHandler = () => {\n    user ? navigate(\"/shipping\") : navigate(\"/login\");\n  };\n\n  return (\n    <Row style={{ justifyContent: \"end\" }}>\n      <Col lg={8}>\n        <h1>Shopping Cart</h1>\n        {cart.length === 0 && (\n          <Message>\n            Shopping Cart is Empty\n            <Link\n              to={\"/\"}\n              style={{\n                textDecoration: \"none\",\n                float: \"right\",\n              }}\n            >\n              Go Back\n            </Link>\n          </Message>\n        )}\n        {cart.length > 0 && (\n          <ListGroup variant=\"flush\">\n            {cart.map((item) => (\n              <ListGroupItem key={item.id}>\n                <Row\n                  style={{ gridGap: \"0.6rem\" }}\n                  className=\"flex-column flex-md-row\"\n                >\n                  <Col md={3}>\n                    <Image\n                      src={item.image}\n                      alt={item.name}\n                      fluid\n                      rounded\n                    ></Image>\n                  </Col>\n                  <Col>\n                    <Row\n                      style={{\n                        height: \"100%\",\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <Col className=\"text-center text-md-start\">\n                        {item.name}\n                      </Col>\n                    </Row>\n                  </Col>\n                  <Col>\n                    <Row\n                      style={{\n                        height: \"100%\",\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <Col\n                        style={{\n                          textAlign: \"center\",\n                        }}\n                      >\n                        ${item.price}\n                      </Col>\n                    </Row>\n                  </Col>\n                  <Col xs={4} md={2} className=\"mx-auto\">\n                    <Row\n                      style={{\n                        height: \"100%\",\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <Col\n                        style={{\n                          textAlign: \"center\",\n                        }}\n                      >\n                        <SelectQuantity\n                          product={item}\n                          productQuantity={item.quantity}\n                          productQuantityHandler={productQuantityHandler.bind(\n                            null,\n                            item\n                          )}\n                        />\n                      </Col>\n                    </Row>\n                  </Col>\n                  <Col xs={4} md={2} className=\"mx-auto\">\n                    <Row\n                      style={{\n                        height: \"100%\",\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <Button\n                        onClick={removeFromCartHandler.bind(null, item.id)}\n                        variant=\"light\"\n                      >\n                        <i className=\"fas fa-trash\"></i>\n                      </Button>\n                    </Row>\n                  </Col>\n                </Row>\n              </ListGroupItem>\n            ))}\n          </ListGroup>\n        )}\n      </Col>\n      <Col md={6} lg={4} className=\"mt-5\">\n        <Card>\n          <ListGroup variant=\"flush\">\n            <ListGroupItem>\n              <h4 style={{ textAlign: \"center\" }}>\n                Subtotal (\n                {cart.reduce((acc, item) => acc + parseInt(item.quantity), 0)})\n                Items\n              </h4>\n\n              <div style={{ textAlign: \"center\" }}>\n                $\n                {cart\n                  .reduce(\n                    (acc, item) =>\n                      acc + parseFloat(item.quantity) * parseFloat(item.price),\n                    0\n                  )\n                  .toLocaleString()}\n              </div>\n            </ListGroupItem>\n            <ListGroupItem>\n              <Button\n                style={{ display: \"block\" }}\n                className=\"mx-auto\"\n                variant=\"primary\"\n                onClick={checkoutHandler}\n                disabled={cart.length === 0}\n              >\n                To Checkout\n              </Button>\n            </ListGroupItem>\n          </ListGroup>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Cartpage;\n","import axios from \"axios\";\nimport { userActions } from \".\";\n\nconst userLoginThunk = (email, password) => {\n  return async (dispatch) => {\n    try {\n      dispatch(userActions.requestUser());\n      let config = { headers: { \"Content-Type\": \"application/json\" } };\n      const { data } = await axios.post(\n        \"/api/users/login\",\n        { email, password },\n        config\n      );\n      dispatch(userActions.setUser(data));\n      localStorage.setItem(\"user\", JSON.stringify(data));\n    } catch (error) {\n      let errorMessage =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch(userActions.failUser(errorMessage));\n    }\n  };\n};\n\nexport default userLoginThunk;\n","import { Container, Row, Col } from \"react-bootstrap\";\n\nconst FormContainer = ({ children }) => {\n  return (\n    <Container>\n      <Row className=\"justify-content-md-center\">\n        <Col xs={12} md={6}>\n          {children}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default FormContainer;\n","import { useState, useEffect } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport userLoginThunk from \"../store/userLoginThunk\";\nimport Message from \"../components/Message\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport FormContainer from \"../components/FormContainer\";\n\nconst LoginPage = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const { loading, user, error } = useSelector((state) => state.user);\n\n  useEffect(() => {\n    user && navigate(\"/\");\n  }, [user, navigate]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(userLoginThunk(email, password));\n  };\n\n  return (\n    <FormContainer>\n      {error && <Message variant=\"danger\">{error}</Message>}\n      {loading && <LoadingSpinner />}\n      <Form onSubmit={submitHandler}>\n        <h1>Sign in</h1>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control\n            onChange={(e) => setEmail(e.target.value)}\n            value={email}\n            type=\"email\"\n            placeholder=\"Enter email\"\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            onChange={(e) => setPassword(e.target.value)}\n            value={password}\n            type=\"password\"\n            placeholder=\"Enter password\"\n          ></Form.Control>\n        </Form.Group>\n        <Button className=\"mb-3\" type=\"submit\" variant=\"primary\">\n          Sign In\n        </Button>\n      </Form>\n      <p>\n        New User? <Link to=\"/register\">Register</Link>\n      </p>\n    </FormContainer>\n  );\n};\n\nexport default LoginPage;\n","import axios from \"axios\";\nimport { userActions } from \".\";\n\nconst userRegisterThunk = (name, email, password) => {\n  return async (dispatch) => {\n    try {\n      dispatch(userActions.requestUser());\n      let config = { headers: { \"Content-Type\": \"application/json\" } };\n      const { data } = await axios.post(\n        \"/api/users\",\n        { name, email, password },\n        config\n      );\n      dispatch(userActions.setUser(data));\n      localStorage.setItem(\"user\", JSON.stringify(data));\n    } catch (error) {\n      let errorMessage =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch(userActions.failUser(errorMessage));\n    }\n  };\n};\n\nexport default userRegisterThunk;\n","import { useState, useEffect } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport userRegisterThunk from \"../store/userRegisterThunk\";\nimport Message from \"../components/Message\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport FormContainer from \"../components/FormContainer\";\n\nconst RegisterPage = () => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [repeatPassword, setRepeatPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const { loading, user, error } = useSelector((state) => state.user);\n\n  useEffect(() => {\n    user && navigate(\"/\");\n  }, [user, navigate]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (password !== repeatPassword) {\n      setMessage(\"Passwords do not match\");\n    } else {\n      message && setMessage(null);\n      dispatch(userRegisterThunk(name, email, password));\n    }\n  };\n\n  return (\n    <FormContainer>\n      {error && <Message variant=\"danger\">{error}</Message>}\n      {message && <Message variant=\"danger\">{message}</Message>}\n      {loading && <LoadingSpinner />}\n      <Form onSubmit={submitHandler}>\n        <h1>Register</h1>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            onChange={(e) => setName(e.target.value)}\n            value={name}\n            type=\"text\"\n            placeholder=\"Enter name\"\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control\n            onChange={(e) => setEmail(e.target.value)}\n            value={email}\n            type=\"email\"\n            placeholder=\"Enter email\"\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            onChange={(e) => setPassword(e.target.value)}\n            value={password}\n            type=\"password\"\n            placeholder=\"Enter password\"\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicRepeatPassword\">\n          <Form.Label>Repeat Password</Form.Label>\n          <Form.Control\n            onChange={(e) => setRepeatPassword(e.target.value)}\n            value={repeatPassword}\n            type=\"password\"\n            placeholder=\"Repeat password\"\n          ></Form.Control>\n        </Form.Group>\n        <Button className=\"mb-3\" type=\"submit\" variant=\"primary\">\n          Register\n        </Button>\n      </Form>\n      <p>\n        Already have an account? <Link to=\"/login\">Log in</Link>\n      </p>\n    </FormContainer>\n  );\n};\n\nexport default RegisterPage;\n","import axios from \"axios\";\nimport { userActions } from \".\";\n\nconst userProfileThunk = (name, email, password) => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch(userActions.requestUser());\n      let userToken = getState().user.user.token;\n      let config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer: ${userToken}`,\n        },\n      };\n      const { data } = await axios.put(\n        \"/api/users/profile\",\n        { name, email, password },\n        config\n      );\n      dispatch(userActions.setUser(data));\n      localStorage.setItem(\"user\", JSON.stringify(data));\n    } catch (error) {\n      let errorMessage =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch(userActions.failUser(errorMessage));\n    }\n  };\n};\n\nexport default userProfileThunk;\n","import axios from \"axios\";\nimport { orderActions } from \".\";\n\nconst getOrderThunk = (id) => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch(orderActions.requestOrder());\n      let userToken = getState().user.user.token;\n      let config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer: ${userToken}`,\n        },\n      };\n      if (id) {\n        const { data } = await axios.get(`/api/orders/${id}`, config);\n        dispatch(orderActions.setOrder(data));\n      } else {\n        const { data } = await axios.get(\"/api/orders/myorders\", config);\n        dispatch(orderActions.setOrders(data));\n      }\n    } catch (error) {\n      let errorMessage =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch(orderActions.failOrder(errorMessage));\n    }\n  };\n};\n\nexport default getOrderThunk;\n","import { useState, useEffect } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { Row, Col, Form, Button, Table } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport userProfileThunk from \"../store/userProfileThunk\";\nimport getOrderThunk from \"../store/getOrderThunk\";\nimport { userActions } from \"../store\";\nimport Message from \"../components/Message\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\n\nconst Profilepage = () => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [repeatPassword, setRepeatPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const {\n    loading: userLoading,\n    user,\n    success,\n    error: userError,\n  } = useSelector((state) => state.user);\n  const {\n    loading: ordersLoading,\n    orders,\n    error: ordersError,\n  } = useSelector((state) => state.orders);\n\n  useEffect(() => {\n    if (!user) {\n      navigate(\"/login\");\n    } else {\n      setName(user.name);\n      setEmail(user.email);\n    }\n  }, [user, navigate]);\n\n  useEffect(() => {\n    dispatch(userActions.resetSuccess());\n    dispatch(getOrderThunk());\n  }, [dispatch]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (password !== repeatPassword) {\n      setMessage(\"Passwords do not match\");\n    } else {\n      message && setMessage(null);\n      dispatch(userProfileThunk(name, email, password));\n    }\n  };\n\n  return (\n    <Row className=\"mx-2\">\n      {userError && <Message variant=\"danger\">{userError}</Message>}\n      {ordersError && <Message variant=\"danger\">{ordersError}</Message>}\n      {message && <Message variant=\"danger\">{message}</Message>}\n      {success && <Message variant=\"success\">Profile Updated</Message>}\n      {(userLoading || ordersLoading) && <LoadingSpinner />}\n      <Col md={3} className=\"mx-1\">\n        <Form onSubmit={submitHandler}>\n          <h1>Profile</h1>\n          <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              onChange={(e) => setName(e.target.value)}\n              value={name}\n              type=\"text\"\n              placeholder=\"Enter name\"\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              onChange={(e) => setEmail(e.target.value)}\n              value={email}\n              type=\"email\"\n              placeholder=\"Enter email\"\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              onChange={(e) => setPassword(e.target.value)}\n              value={password}\n              type=\"password\"\n              placeholder=\"Enter password\"\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"formBasicRepeatPassword\">\n            <Form.Label>Repeat Password</Form.Label>\n            <Form.Control\n              onChange={(e) => setRepeatPassword(e.target.value)}\n              value={repeatPassword}\n              type=\"password\"\n              placeholder=\"Repeat password\"\n            ></Form.Control>\n          </Form.Group>\n          <Button className=\"mb-3\" type=\"submit\" variant=\"primary\">\n            Save\n          </Button>\n        </Form>\n      </Col>\n      <Col md={8} className=\"mx-1\">\n        <h1>My Orders</h1>\n        <Table striped bordered responsive className=\"table-sm\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>DATE</th>\n              <th>TOTAL</th>\n              <th>PAID</th>\n              <th>DELIVERED</th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order._id}>\n                <td>\n                  <Link to={`/orders/${order._id}`}>{order._id}</Link>\n                </td>\n                <td>{order.createdAt.substring(0, 10)}</td>\n                <td>{order.totalPrice}</td>\n                <td>\n                  {order.paymentResult.status === \"COMPLETED\"\n                    ? order.paymentResult.paidAt.substring(0, 10)\n                    : \"NOT PAID\"}\n                </td>\n                <td>{order.isDelivered ? \"DELIVERED\" : \"NOT DELIVERED\"}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Profilepage;\n","import { Nav } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nconst checkoutSteps = ({ step1, step2, step3, step4 }) => {\n  let step1Disable = step1 ? false : true;\n  let step2Disable = step2 ? false : true;\n  let step3Disable = step3 ? false : true;\n  let step4Disable = step4 ? false : true;\n\n  return (\n    <Nav className=\"justify-content-center mb-4\">\n      <LinkContainer disabled={step1Disable} to=\"/login\">\n        <Nav.Link>Login</Nav.Link>\n      </LinkContainer>\n      <LinkContainer disabled={step2Disable} to=\"/shipping\">\n        <Nav.Link>Shipping</Nav.Link>\n      </LinkContainer>\n      <LinkContainer disabled={step3Disable} to=\"/payment\">\n        <Nav.Link>Payment</Nav.Link>\n      </LinkContainer>\n      <LinkContainer disabled={step4Disable} to=\"/order\">\n        <Nav.Link>Place Order</Nav.Link>\n      </LinkContainer>\n    </Nav>\n  );\n};\n\nexport default checkoutSteps;\n","import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FormContainer from \"../components/FormContainer\";\nimport { cartActions } from \"../store\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\n\nconst Shippingpage = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const storedShipping = useSelector((state) => state.cart.shipping);\n  const [address, setAddress] = useState(storedShipping.address);\n  const [city, setCity] = useState(storedShipping.city);\n  const [postalCode, setPostalCode] = useState(storedShipping.postalCode);\n  const [country, setCountry] = useState(storedShipping.country);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    let shippingObject = { address, city, postalCode, country };\n    dispatch(cartActions.addShipping(shippingObject));\n    navigate(\"/payment\");\n  };\n\n  return (\n    <FormContainer>\n      <h1 className=\"my-3\">Shipping</h1>\n      <CheckoutSteps step1 step2 />\n      <Form onSubmit={submitHandler}>\n        <Form.Group className=\"my-2\">\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            onChange={(e) => setAddress(e.target.value)}\n            value={address}\n            type=\"text\"\n            placeholder=\"Enter Address\"\n            required\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group className=\"my-2\">\n          <Form.Label>City</Form.Label>\n          <Form.Control\n            onChange={(e) => setCity(e.target.value)}\n            value={city}\n            type=\"text\"\n            placeholder=\"Enter City\"\n            required\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group className=\"my-2\">\n          <Form.Label>Postal Code</Form.Label>\n          <Form.Control\n            onChange={(e) => setPostalCode(e.target.value)}\n            value={postalCode}\n            type=\"text\"\n            placeholder=\"Enter Postal Code\"\n            required\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group className=\"my-2\">\n          <Form.Label>Country</Form.Label>\n          <Form.Control\n            onChange={(e) => setCountry(e.target.value)}\n            value={country}\n            type=\"text\"\n            placeholder=\"Enter Country\"\n            required\n          ></Form.Control>\n        </Form.Group>\n        <Button className=\"mt-3\" type=\"submit\" variant=\"primary\">\n          Proceed to Payment\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default Shippingpage;\n","import { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport FormContainer from \"../components/FormContainer\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { cartActions } from \"../store\";\n\nconst Paymentpage = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [payment, setPayment] = useState(\"Paypal\");\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(cartActions.addPayment(payment));\n    navigate(\"/order\");\n  };\n\n  return (\n    <FormContainer>\n      <h1 className=\"my-3\">Payment</h1>\n      <CheckoutSteps step1 step2 step3 />\n      <Form onSubmit={submitHandler}>\n        <Form.Group className=\"mb-3\" onChange={(e) => setPayment(e.target.id)}>\n          <Form.Label>Select Payment Method:</Form.Label>\n          <Form.Check\n            type=\"radio\"\n            label=\"Paypal or Credit Card\"\n            id=\"Paypal\"\n            name=\"payment\"\n          />\n          <Form.Check name=\"payment\" type=\"radio\" label=\"Stripe\" id=\"Stripe\" />\n        </Form.Group>\n        <Button type=\"submit\" variant=\"primary\">\n          Order\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default Paymentpage;\n","import axios from \"axios\";\nimport { orderActions } from \".\";\n\nconst placeOrderThunk = (order) => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch(orderActions.requestOrder());\n      let userToken = getState().user.user.token;\n      let config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer: ${userToken}`,\n        },\n      };\n      // HTTP request to paypal\n      const { data } = await axios.post(`/api/orders`, order, config);\n      dispatch(orderActions.setOrder(data));\n    } catch (error) {\n      let errorMessage =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch(orderActions.failOrder(errorMessage));\n    }\n  };\n};\n\nexport default placeOrderThunk;\n","import { useEffect, useState } from \"react\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport Message from \"../components/Message\";\nimport {\n  Button,\n  Row,\n  Col,\n  ListGroup,\n  Image,\n  ListGroupItem,\n} from \"react-bootstrap\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport placeOrderThunk from \"../store/placeOrderThunk\";\nimport { PayPalButtons } from \"@paypal/react-paypal-js\";\nimport { orderActions } from \"../store\";\n\nconst Orderpage = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [paypalResponse, setPaypalResponse] = useState(null);\n  const { cart, payment, shipping } = useSelector((state) => state.cart);\n  const {\n    order: { _id: orderId },\n    success,\n    error,\n  } = useSelector((state) => state.orders);\n\n  useEffect(() => {\n    dispatch(orderActions.resetSuccess());\n    return () => {\n      dispatch(orderActions.resetOrder());\n    };\n  }, [dispatch]);\n\n  const clickHandler = () => {\n    let order = {\n      cart,\n      payment,\n      shipping,\n      itemsPrice,\n      shippingPrice,\n      taxPrice,\n      totalPrice,\n    };\n    if (paypalResponse) {\n      order.paymentResult = paypalResponse.value;\n    }\n    dispatch(placeOrderThunk(order));\n  };\n\n  useEffect(() => {\n    orderId && success && navigate(`/orders/summary/${orderId}`);\n  }, [navigate, success, orderId]);\n\n  const itemsPrice = cart.reduce(\n    (acc, next) => acc + Number(next.price) * Number(next.quantity),\n    0\n  );\n  const shippingPrice = itemsPrice > 100 ? 0 : 8.99;\n  const taxPrice = (itemsPrice * 0.2).toLocaleString(undefined, {\n    maximumFractionDigits: 2,\n    minimumFractionDigits: 2,\n  });\n  const totalPrice = (itemsPrice + shippingPrice).toLocaleString(undefined, {\n    maximumFractionDigits: 2,\n    minimumFractionDigits: 2,\n  });\n\n  return (\n    <Row>\n      {error && <Message variant=\"danger\">{error}</Message>}\n      <CheckoutSteps step1 step2 step3 step4 />\n      <Col md={8}>\n        <ListGroup variant=\"flush\">\n          <ListGroup.Item>\n            <h2>Shipping</h2>\n            <p>\n              <strong>Address:</strong> {shipping.address}, {shipping.city},{\" \"}\n              {shipping.postalCode}, {shipping.country}\n            </p>\n          </ListGroup.Item>\n          <ListGroup.Item>\n            <h2>Payment</h2>\n            <p>\n              <strong>Payment Method:</strong> {payment}\n            </p>\n          </ListGroup.Item>\n          <ListGroup.Item>\n            <h2>Order</h2>\n            {cart.length > 0 ? (\n              cart.map((item) => (\n                <ListGroup variant=\"flush\" key={item.id}>\n                  <ListGroupItem>\n                    <Row className=\"flex-column justify-content-center flex-sm-row align-items-sm-center\">\n                      <Col xs={6} sm={4} md={3}>\n                        <Image src={item.image} alt={item.name} fluid rounded />\n                      </Col>\n                      <Col>\n                        <Col xs={\"auto\"}>\n                          <Link to={`/product/${item.id}`}>\n                            <strong>{item.name}</strong>\n                          </Link>\n                        </Col>\n                        <Col xs={\"auto\"}>\n                          Price: ${item.price.toLocaleString()}\n                        </Col>\n                        <Col xs={\"auto\"}>Quantity: {item.quantity}</Col>\n                        <Col xs={\"auto\"}>\n                          <strong>Total: </strong>\n                          {(item.price * item.quantity).toLocaleString()}\n                        </Col>\n                      </Col>\n                    </Row>\n                  </ListGroupItem>\n                </ListGroup>\n              ))\n            ) : (\n              <p>\"No items in Cart\"</p>\n            )}\n          </ListGroup.Item>\n        </ListGroup>\n      </Col>\n      <Col md={4}>\n        <h2>Order Summary</h2>\n        <ListGroup>\n          <ListGroupItem>\n            Items: $\n            {itemsPrice.toLocaleString(undefined, {\n              maximumFractionDigits: 2,\n              minimumFractionDigits: 2,\n            })}\n          </ListGroupItem>\n          <ListGroupItem>Shipping: ${shippingPrice}</ListGroupItem>\n          <ListGroupItem>VAT: ${taxPrice}</ListGroupItem>\n          <ListGroupItem>Total: ${totalPrice}</ListGroupItem>\n        </ListGroup>\n        <ListGroup className=\"mt-3\">\n          <PayPalButtons\n            createOrder={(data, actions) => {\n              return actions.order\n                .create({\n                  purchase_units: [\n                    {\n                      amount: {\n                        value: totalPrice,\n                      },\n                    },\n                  ],\n                })\n                .then((orderId) => {\n                  return orderId;\n                });\n            }}\n            onApprove={function (data, actions) {\n              setPaypalResponse(actions.order.capture());\n            }}\n          />\n        </ListGroup>\n        <Button\n          variant=\"primary\"\n          onClick={clickHandler}\n          style={{ display: \"block\", marginLeft: \"auto\" }}\n          className=\"mt-3\"\n          disabled={!paypalResponse}\n        >\n          Place Order\n        </Button>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Orderpage;\n","import { useEffect } from \"react\";\nimport Message from \"../components/Message\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport { Row, Col, ListGroup, Image, ListGroupItem } from \"react-bootstrap\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport getOrderThunk from \"../store/getOrderThunk\";\nimport { cartActions, orderActions } from \"../store\";\n\nconst Confirmationpage = () => {\n  const dispatch = useDispatch();\n  const { summary, id } = useParams();\n  let { order, error, loading } = useSelector((state) => state.orders);\n\n  useEffect(() => {\n    dispatch(orderActions.resetSuccess());\n    dispatch(cartActions.clearCart());\n    dispatch(orderActions.resetOrder());\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(getOrderThunk(id));\n  }, [dispatch, id]);\n\n  return (\n    <Row>\n      {error && <Message variant=\"danger\">{error}</Message>}\n      {loading && <LoadingSpinner />}\n      {summary &&\n        order.paymentResult &&\n        order.paymentResult.status === \"COMPLETED\" && (\n          <Message variant=\"success\">Thanks for your order!</Message>\n        )}\n      {!order._id || order.paymentResult.status !== \"COMPLETED\" ? (\n        <Message variant=\"danger\">Oops, something went wrong</Message>\n      ) : (\n        <Col md={8}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>Order</h2>\n              <p>\n                <strong>Order Id:</strong> {order._id}\n              </p>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <h2>Delivery</h2>\n              <p>\n                {order.shipping.address}, {order.shipping.city},{\" \"}\n                {order.shipping.postalCode}, {order.shipping.country}\n              </p>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <h2>Payment</h2>\n              <p>\n                <strong>Payment Method:</strong> {order.payment}\n              </p>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <h2>Items</h2>\n              {order.cart.length > 0 &&\n                order.cart.map((item) => (\n                  <ListGroup variant=\"flush\" key={item.id}>\n                    <ListGroupItem>\n                      <Row className=\"flex-column justify-content-center flex-sm-row align-items-sm-center\">\n                        <Col xs={6} sm={4} md={3}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Col xs={\"auto\"}>\n                            <Link to={`/product/${item.id}`}>\n                              <strong>{item.name}</strong>\n                            </Link>\n                          </Col>\n                          <Col xs={\"auto\"}>\n                            Price: ${item.price.toLocaleString()}\n                          </Col>\n                          <Col xs={\"auto\"}>Quantity: {item.quantity}</Col>\n                          <Col xs={\"auto\"}>\n                            <strong>Total: </strong>\n                            {(item.price * item.quantity).toLocaleString()}\n                          </Col>\n                        </Col>\n                      </Row>\n                    </ListGroupItem>\n                  </ListGroup>\n                ))}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n      )}\n    </Row>\n  );\n};\n\nexport default Confirmationpage;\n","import { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { PayPalScriptProvider } from \"@paypal/react-paypal-js\";\nimport { Container } from \"react-bootstrap\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Homepage from \"./pages/Homepage\";\nimport Productpage from \"./pages/Productpage\";\nimport Cartpage from \"./pages/Cartpage\";\nimport Loginpage from \"./pages/Loginpage\";\nimport Registerpage from \"./pages/Registerpage\";\nimport Profilepage from \"./pages/Profilepage\";\nimport Shippingpage from \"./pages/Shippingpage\";\nimport Paymentpage from \"./pages/Paymentpage\";\nimport Orderpage from \"./pages/Orderpage\";\nimport Confirmationpage from \"./pages/Confirmationpage\";\n\nconst App = () => {\n  const [paypalClientId, setPaypalClientId] = useState(\"test\");\n  const fetchPayPalClientId = async () => {\n    const { data } = await axios.get(\"/api/config/paypal\");\n    return data;\n  };\n\n  useEffect(() => {\n    fetchPayPalClientId().then((id) => {\n      setPaypalClientId(id);\n    });\n  }, []);\n\n  return (\n    <PayPalScriptProvider options={{ \"client-id\": paypalClientId }}>\n      <Router>\n        <Header />\n        <main className=\"py-3\">\n          <Container>\n            <Routes>\n              <Route path=\"login\" element={<Loginpage />} />\n              <Route path=\"register\" element={<Registerpage />} />\n              <Route path=\"profile\" element={<Profilepage />} />\n              <Route path=\"product/:id\" element={<Productpage />} />\n              <Route path=\"cart\" element={<Cartpage />}>\n                <Route path=\":id\" element={<Cartpage />} />\n              </Route>\n              <Route path=\"shipping\" element={<Shippingpage />} />\n              <Route path=\"payment\" element={<Paymentpage />} />\n              <Route path=\"order\" element={<Orderpage />} />\n              <Route\n                path=\"orders/:summary/:id\"\n                element={<Confirmationpage />}\n              />\n              <Route path=\"orders/:id\" element={<Confirmationpage />} />\n              <Route path=\"\" element={<Homepage />} exact />\n            </Routes>\n          </Container>\n        </main>\n        <Footer />\n      </Router>\n    </PayPalScriptProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"./bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}